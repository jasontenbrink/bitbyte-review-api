{"version":3,"sources":["apis/realApis.js","utils.js","store/index.js","components/MakeStars.js","VendorsList/VendorsList.js","ReviewForm/ReviewForm.js","Review/Review.js","components/formState.js","Login/Login.js","Registration/styles.js","Registration/Registration.js","ForgotPassword/forgotPasswordStyles.js","ForgotPassword/ForgotPassword.js","Profile/profileStyles.js","Profile/Profile.js","SuggestVendor/SuggestVendorStyles.js","SuggestVendor/SuggestVendor.js","UserReviews/userReviewsStyles.js","UserReviews/UserReviews.js","EditReview/EditReview.js","Home/Home.js","Routes/Routes.js","components/TopNavButton.js","TopNav/TopNav.js","MainNotification/MainNotification.js","apis/mockData.js","apis/mockApis.js","MainContent.js","App.js","serviceWorker.js","index.js"],"names":["realApis","getReviews","_getReviews","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","apply","this","arguments","postReview","_postReview","_callee2","payload","_ref2","_context2","post","_x","login","_login","_callee3","_ref3","_context3","_x2","logout","_logout","_callee4","_context4","register","_register","_callee5","_context5","_x3","resetPassword","_resetPassword","_callee6","_context6","_x4","changePassword","_changePassword","_callee7","_context7","_x5","suggestVendor","_suggestVendor","_callee8","_context8","_x6","provideFeedback","_provideFeedback","_callee9","_context9","_x7","updateReview","_updateReview","_callee10","_ref4","_context10","put","_x8","deleteReview","_deleteReview","_callee11","_context11","delete","params","_x9","starQuestions","numberQuestions","booleanQuestions","questionScoresToArray","objectWithQuestions","question1","question2","question3","question4","question5","question6","question7","question8","question9","question10","newObjectWithQuestions","objectWithoutProperties","questions","i","push","parseFloat","questionScoresToObject","objectWithScores","rest","questionsObj","reduce","total","question","index","coloredStars","newObj","objectSpread","console","log","initialUserState","loggedIn","username","firstName","lastName","userUuid","email","reviews","store","init","models","state","reducers","setReviews","effects","dispatch","getReviewsAndSetSelected","_getReviewsAndSetSelected","rootState","apis","map","selectedReview","setSelectedReview","vendorId","newReview","formatedReview","call","setCall","isFetching","error","user","upsertUserReviews","app","setNotifcation","notification","t0","response","isfetching","setUser","deleteReviewFromStore","id","filter","review","upsertedReview","result","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","_x18","vendor","_x19","_x20","redux","middlewares","logger","makeStars","starsCount","stars","partialStar","Math","floor","react_default","createElement","StarRate_default","style","color","key","connect","withRouter","history","List","ListItem","ListItemIcon","Dashboard_default","ListItemText","primary","Fragment","Divider","button","onClick","marginLeft","name","MakeStars","sum","length","calcAverageStars","require","ReviewForm","props","_useState","useState","text","hasStaticStars","_useState2","slicedToArray","formQuestions","setQuestions","_useState3","_useState4","comment","setComment","_useState5","value","_useState6","_useState7","_useState8","fontSize","vendorName","questionNumber","marginTop","maxWidth","display","position","top","_loop","onMouseEnter","onMouseLeave","toConsumableArray","TextField","fullWidth","multiline","rowsMax","onChange","e","target","className","margin","variant","Button","find","alignItems","justifyContent","concat","comments","initializeForm","fields","customValidators","undefined","values","errors","validators","forEach","field","isFormValid","updateForm","formState","setFormState","validator","newFormState","defineProperty","requiredFieldsLength","hasAllRequiredFields","keys","hasErrors","checkValidity","useStyles","makeStyles","theme","@global","body","paper","spacing","flexDirection","height","avatar","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useSelector","useEffect","location","goBack","navFunc","isRedirect","_initializeForm","_initializeForm2","initialFormState","Container","component","Typography","align","onSubmit","preventDefault","noValidate","required","label","autoComplete","autoFocus","password","type","disabled","Grid","container","item","xs","Link","RouterLink","to","Registration","CssBaseline","sm","justify","ForgotPassword","Profile","newPasswordConfirm","newPassword","oldPassword","SuggestVendor","initialRequiredFormState","requiredValidators","requiredformState","setRequiredFormState","_initializeForm3","_initializeForm4","initialOptionalFormState","optionalValidators","optionalformState","setOptionalFormState","handleOptionalChange","city","addressLine1","addressLine2","zipCode","phone","icon","marginRight","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","cardHeader","grey","cardContent","flexGrow","footer","UserReviews","gutterBottom","md","Card","CardHeader","title","subheader","titleTypographyProps","subheaderTypographyProps","CardContent","CardActions","size","EditReview","match","reviewId","questionsText","formComment","fontWeight","letterSpacing","word","fontFamily","textAlign","buttonStyle","Home","Routes","react_router","path","exact","Review","Login","render","_props$match$params","ReviewForm_ReviewForm","pathname","StyledButton","withStyles","root","getContrastText","indigo","&:hover","children","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","fixedHeight","open","setOpen","anchorEl","setAnchorEl","handleClose","AppBar","clsx","Toolbar","IconButton","edge","aria-label","Menu_default","cursor","noWrap","components_TopNavButton","event","currentTarget","AccountCircle_default","Menu_Menu","keepMounted","Boolean","onClose","MenuItem","close","MainNotifcation","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","Close_default","zip","userAndReviews","userId","created","updated","mockApis","userReviews","Promise","resolve","setTimeout","statusCode","_React$useState","React","_React$useState2","_React$useState3","_React$useState4","_React$useState5","_React$useState6","modalOpen","setModalOpen","fixedHeightPaper","react","TopNav_TopNav","Drawer","ChevronLeft_default","VendorsList_VendorsList","lg","MainNotification","Paper","src_Routes_Routes","Dialog","disableBackdropClick","aria-labelledby","DialogTitle","DialogContent","rows","DialogActions","page","window","href","hostname","ReactDOM","es","react_router_dom","src_MainContent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0f02a68.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//uncomment the below when you are working locally using the react dev server\n// import Axios from \"axios\";\n// const axios = Axios.create({\n//   baseURL: \"http://localhost:5000/api\"\n// });\n\nexport default {\n  async getReviews() {\n    const { data } = await axios.get(\"/reviews\");\n    return data;\n  },\n  async postReview(payload) {\n    const { data } = await axios.post(\"/reviews\", payload);\n    return data;\n    // returns statusCode 200\n  },\n  async login(payload) {\n    const { data } = await axios.post(\"/login\", payload);\n    return data;\n  },\n  async logout() {\n    return await axios.get(\"/logout\");\n  },\n  async register(payload) {\n    return await axios.get(\"/registration\", payload);\n  },\n  async resetPassword(payload) {\n    return await axios.get(\"/reset-password\", payload);\n  },\n  async changePassword(payload) {\n    return await axios.post(\"/change-password\", payload);\n  },\n  async suggestVendor(payload) {\n    return await axios.get(\"/suggest-vendor\");\n  },\n  async provideFeedback(payload) {\n    return await axios.get(\"/feedback\");\n  },\n  async updateReview(payload) {\n    const { data } = await axios.put(\"/reviews\", payload);\n    return data;\n  },\n  async deleteReview(payload) {\n    return await axios.delete(\"/reviews\", { params: payload });\n  }\n};\n","export const starQuestions = [\n  \"Are the vendor's margins competative (Do you feel they take too much off of the top)?\",\n  \"Did the vendor communicate with you in a timely manner?\",\n  \"was the vendor knowledgable of the technology industry?\",\n  \"was the vendor knowledgable of the local job market?\",\n  \"Did the vendor put in the effort to get to know you? (Didn't show you front end jobs if you didn't want to do front end)\",\n  \"Does the vendor treat minorities well?\",\n  \"Did the vendor advocate to get you the pay rate you wanted?\",\n  \"Did the vendor consistently get you interviews?\"\n];\nexport const numberQuestions = [\n  \"How many interviews did the vendor get you per week?\",\n  \"If you were placed through this vendor, how many weeks between the time you started working with the vendor and landing a job?\"\n];\n\nexport const booleanQuestions = [\n  \"did you end up getting placed through the vendor?\"\n];\n//\"Did the vendor deal with you fairly?\",\n\n//\"Did the vendor try and do right by you?\",\n//\"Was the vendor receptive to your feedback?\",\n","import { init } from \"@rematch/core\";\n// import apis from \"../apis/mockApis\";\nimport apis from \"../apis/realApis\";\nimport logger from \"redux-logger\";\nimport { starQuestions } from \"../utils\";\n\nfunction questionScoresToArray(objectWithQuestions) {\n  const {\n    question1,\n    question2,\n    question3,\n    question4,\n    question5,\n    question6,\n    question7,\n    question8,\n    question9,\n    question10,\n    ...newObjectWithQuestions\n  } = objectWithQuestions;\n  const questions = [];\n  for (let i = 1; i < 11; i++) {\n    questions.push(parseFloat(objectWithQuestions[\"question\" + i]));\n  }\n  newObjectWithQuestions.questions = questions;\n  return newObjectWithQuestions;\n}\n\nfunction questionScoresToObject(objectWithScores) {\n  const { questions, ...rest } = objectWithScores;\n  const questionsObj = objectWithScores.questions.reduce(\n    (total, question, index) => {\n      total[\"question\" + (index + 1)] = question.coloredStars;\n      return total;\n    },\n    {}\n  );\n  const newObj = { ...rest, ...questionsObj };\n  console.log(\"new obj\", newObj);\n  return newObj;\n}\n\nconst initialUserState = {\n  loggedIn: false,\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  userUuid: \"\",\n  email: \"\",\n  reviews: []\n  // loggedIn: true,\n  // username: \"\",\n  // firstName: \"\",\n  // lastName: \"\",\n  // userUuid: \"\",\n  // email: \"\",\n  // reviews: []\n};\n\nconst store = init({\n  models: {\n    reviews: {\n      state: [],\n      reducers: {\n        setReviews(state, payload) {\n          return payload;\n        }\n        // upsertReviews\n      },\n      effects: dispatch => ({\n        async getReviewsAndSetSelected(payload, rootState) {\n          // api call for getting reviews\n          const reviews = await apis.getReviews();\n          dispatch.reviews.setReviews(reviews.map(questionScoresToArray));\n          dispatch.selectedReview.setSelectedReview(reviews[0].vendorId);\n        },\n        async postReview(payload, rootState) {\n          dispatch.call.setCall({ isFetching: true, error: \"\" });\n          try {\n            const newReview = await apis.postReview(\n              questionScoresToObject(payload)\n            );\n            const formatedReview = questionScoresToArray(newReview);\n            dispatch.user.upsertUserReviews(formatedReview);\n            // dispatch.reviews.upsertReviews(formatedReview);\n            dispatch.call.setCall({ isFetching: false, error: \"\" });\n            dispatch.app.setNotifcation({\n              notification: \"Review successfully saved\"\n            });\n          } catch (e) {\n            console.log(e.response.data);\n            dispatch.call.setCall({\n              isFetching: false,\n              error: e.response.data\n            });\n            dispatch.app.setNotifcation({\n              notification: e.response.data\n            });\n          }\n        },\n        async updateReview(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            const newReview = await apis.updateReview(\n              questionScoresToObject(payload)\n            );\n            dispatch.user.upsertUserReviews(questionScoresToArray(newReview));\n            dispatch.app.setNotifcation({\n              notification: \"Review successfully updated\"\n            });\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n          }\n        }\n      })\n    },\n    selectedReview: {\n      state: null,\n      reducers: {\n        setSelectedReview(state, payload) {\n          return payload;\n        }\n      }\n    },\n    user: {\n      state: initialUserState,\n      reducers: {\n        setUser(state, payload) {\n          return payload;\n        },\n        deleteReviewFromStore(state, id) {\n          console.log(\"state\", state);\n          const reviews = state.reviews.filter(review => review.id !== id);\n          return { ...state, reviews };\n        },\n        upsertUserReviews(state, upsertedReview) {\n          const reviews = state.reviews.filter(review => {\n            return review.id != upsertedReview.id;\n          });\n          reviews.push(upsertedReview);\n          return { ...state, reviews };\n        }\n      },\n      effects: dispatch => ({\n        async login(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            const result = await apis.login(payload);\n            dispatch.user.setUser({\n              ...result,\n              reviews: result.reviews.map(questionScoresToArray),\n              loggedIn: true\n            });\n            dispatch.call.setCall({ isfetching: false, error: \"\" });\n          } catch (e) {\n            dispatch.call.setCall({\n              isfetching: false,\n              error: \"failed login attempt\"\n            });\n          }\n        },\n        async logout() {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          await apis.logout();\n          dispatch.call.setCall({ isfetching: false, error: \"\" });\n          dispatch.user.setUser(initialUserState);\n          dispatch.app.setNotifcation({\n            notification: \"Logout Successful\"\n          });\n        },\n        async register(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            const result = await apis.login(payload);\n            dispatch.user.setUser({ ...result, loggedIn: true });\n            dispatch.call.setCall({ isfetching: false, error: \"\" });\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n          }\n        },\n        async resetPassword(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            await apis.resetPassword(payload);\n            dispatch.app.setNotifcation({\n              notification: \"Check your email for your new password\"\n            });\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n          }\n        },\n        async changePassword(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            await apis.changePassword(payload);\n            dispatch.app.setNotifcation({\n              notification: \"Your password has been changed\"\n            });\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n            dispatch.app.setNotifcation({\n              notification: \"There was an error resetting your password\"\n            });\n          }\n        },\n        async deleteReview(id, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            await apis.deleteReview({ id });\n            dispatch.app.setNotifcation({\n              notification: \"Review successfully deleted\"\n            });\n            dispatch.user.deleteReviewFromStore(id);\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n          }\n        }\n      })\n    },\n    call: {\n      state: { isfetching: false, error: \"\" },\n      reducers: {\n        setCall(state, payload) {\n          return payload;\n        }\n      }\n    },\n    app: {\n      state: { notification: \"\" },\n      reducers: {\n        setNotifcation(state, payload) {\n          return payload;\n        }\n      },\n      effects: dispatch => ({\n        async provideFeedback(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            await apis.provideFeedback(payload);\n            dispatch.app.setNotifcation({\n              notification: \"Thanks for your help!\"\n            });\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n          }\n        }\n      })\n    },\n    vendor: {\n      state: {},\n      reducers: {},\n      effects: dispatch => ({\n        async suggestVendor(payload, rootState) {\n          dispatch.call.setCall({ isfetching: true, error: \"\" });\n          try {\n            await apis.suggestVendor(payload);\n            dispatch.app.setNotifcation({\n              notification: \"Thanks for your help!\"\n            });\n          } catch (e) {\n            dispatch.call.setCall({ isfetching: false, error: e });\n          }\n        }\n      })\n    }\n  },\n  redux: {\n    middlewares: [logger]\n  }\n});\n\nconst upsertReviews = (state, upsertedReview) => {\n  const reviews = state.reviews.filter(review => {\n    return review.id != upsertedReview.id;\n  });\n  reviews.push(upsertedReview);\n  return { ...state, reviews };\n};\n\nexport const { dispatch } = store;\n\nexport default store;\n","import React from \"react\";\nimport StarRate from \"@material-ui/icons/StarRate\";\n\nexport default function makeStars(starsCount) {\n  const stars = [];\n  const partialStar = starsCount % 1;\n  for (let i = 0; i < Math.floor(starsCount); i++) {\n    stars.push(<StarRate style={{ color: \"green\" }} key={i} />);\n  }\n  partialStar &&\n    stars.push(<StarRate style={{ color: \"lightgreen\" }} key={starsCount} />);\n\n  return stars;\n}\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport { dispatch } from \"../store\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport MakeStars from \"../components/MakeStars\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction calcAverageStars(review) {\n  const sum = review.questions.reduce((total, question) => {\n    return (total += question);\n  }, 0);\n  console.log(sum, review.questions.length);\n  return sum / review.questions.length;\n}\n\nfunction VendorsList({ reviews, history }) {\n  return (\n    <List>\n      <ListItem>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Vendors\" />\n      </ListItem>\n      {reviews.map(review => (\n        <React.Fragment key={review.vendorId}>\n          <Divider />\n          <ListItem\n            button\n            onClick={() => {\n              dispatch.selectedReview.setSelectedReview(review.vendorId);\n              history.push(\"/reviews\");\n            }}\n          >\n            <ListItemText\n              style={{ marginLeft: \"10px\" }}\n              primary={review.name}\n            />\n            {MakeStars(calcAverageStars(review))}\n          </ListItem>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n\nconst mapStateToProps = state => ({\n  reviews: state.reviews\n});\nexport default connect(mapStateToProps)(withRouter(VendorsList));\n","import React, { useState } from \"react\";\n// import ReviewFormAutocomplete from \"./ReviewFormAutocomplete\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { dispatch } from \"../store\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { starQuestions, numberQuestions, booleanQuestions } from \"../utils\";\nconst approve = require(\"approvejs\");\n\nfunction makeStars(setQuestions, questionNumber, questions) {\n  const stars = [];\n  const question = questions[questionNumber];\n  for (let i = 0; i < 5; i++) {\n    stars.push(\n      <StarRate\n        onMouseEnter={() => {\n          if (question.hasStaticStars) return 0;\n          question.coloredStars = i + 1;\n          setQuestions(questions);\n        }}\n        onMouseLeave={() => {\n          if (question.hasStaticStars) return 0;\n          question.coloredStars = 0;\n          setQuestions(questions);\n        }}\n        onClick={() => {\n          if (question.hasStaticStars) {\n            question.coloredStars = i + 1;\n          }\n          question.hasStaticStars = true;\n          setQuestions(questions);\n        }}\n        style={{ color: i < question.coloredStars ? \"green\" : \"yellow\" }}\n        key={i}\n      />\n    );\n  }\n  return stars;\n}\n\nfunction ReviewForm(props) {\n  //get vendorUUid from route params\n  const [formQuestions, setQuestions] = useState(\n    starQuestions.map(question => ({\n      text: question,\n      coloredStars: 0,\n      hasStaticStars: false\n    }))\n  );\n  const [comment, setComment] = useState(\"\");\n  const [formNumberQuestions, setNumberQuestions] = useState(\n    numberQuestions.map(question => ({ text: question, value: \"\" }))\n  );\n  const [formBooleanQuestions, setFormBooleanQuestions] = useState(\n    booleanQuestions.map(question => ({ text: question, value: \"\" }))\n  );\n  return (\n    <div>\n      <div style={{ fontSize: \"20px\" }}>{props.vendorName}</div>\n\n      <div>\n        <Divider />\n        <div style={{ marginLeft: \"10px\" }}>\n          {formQuestions.map((question, questionNumber) => {\n            return (\n              <div style={{ marginTop: \"20px\" }} key={question.text}>\n                <span style={{ maxWidth: \"70%\", display: \"inline-block\" }}>\n                  {question.text}\n                </span>\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"5px\",\n                    marginLeft: \"15px\"\n                  }}\n                >\n                  {makeStars(setQuestions, questionNumber, [...formQuestions])}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n        {/* {formBooleanQuestions.map(question => {\n          return (\n            <div key={question.text} style={{ marginLeft: \"10px\" }}>\n              <FormControl\n                component=\"div\"\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  marginTop: \"20px\"\n                }}\n              >\n                <div>{question.text}</div>\n                <RadioGroup\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    position: \"relative\",\n                    top: \"-10px\",\n                    marginLeft: \"15px\"\n                  }}\n                  aria-label=\"gender\"\n                  name=\"gender1\"\n                  value={question.value}\n                  onChange={e => {\n                    question.value = e.target.value;\n                    setFormBooleanQuestions([...formBooleanQuestions]);\n                  }}\n                >\n                  <FormControlLabel\n                    value={\"true\"}\n                    control={<Radio />}\n                    label=\"Yes\"\n                  />\n                  <FormControlLabel\n                    value={\"false\"}\n                    control={<Radio />}\n                    label=\"No\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </div>\n          );\n        })} */}\n        {/* <div style={{ marginLeft: \"10px\" }}> */}\n        {/* {formNumberQuestions.map((question, questionNumber) => {\n            return (\n              <div style={{ marginTop: \"20px\" }} key={question.text}>\n                <span style={{ maxWidth: \"70%\", display: \"inline-block\" }}>\n                  {question.text}\n                </span>\n\n                <TextField\n                  style={{\n                    verticalAlign: \"top\",\n                    width: \"75px\",\n                    marginLeft: \"10px\",\n                    marginBottom: \"0px\",\n                    marginTop: \"0px\",\n                    padding: \"0px\"\n                  }}\n                  InputProps={{ style: { height: \"37px\" } }}\n                  id=\"outlined-multiline-flexible\"\n                  fullWidth={false}\n                  multiline\n                  rowsMax=\"4\"\n                  value={question.value}\n                  onChange={e => {\n                    const value = parseInt(e.target.value);\n                    const validatedValue = approve.value(value, {\n                      numeric: true,\n                      range: { min: 0, max: 100 }\n                    });\n                    if (validatedValue.approved) {\n                      question.value = value;\n                      setNumberQuestions([...formNumberQuestions]);\n                    }\n                    if (e.target.value === \"\") {\n                      question.value = e.target.value;\n                      setNumberQuestions([...formNumberQuestions]);\n                    }\n                  }}\n                  className={null}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </div>\n            );\n          })} */}\n        {/* </div> */}\n        <div style={{ marginLeft: \"10px\", marginTop: \"20px\", maxWidth: \"85%\" }}>\n          <div>Additional Comments:</div>\n          <TextField\n            id=\"outlined-multiline-flexible\"\n            fullWidth={true}\n            multiline\n            rowsMax=\"4\"\n            value={comment}\n            onChange={e => setComment(e.target.value)}\n            className={null}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </div>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ marginTop: \"25px\", marginLeft: \"15px\" }}\n          onClick={() => {\n            console.log(\"questions\", {\n              formQuestions,\n              comment,\n              vendorId: props.vendorId\n            });\n            dispatch.reviews.postReview({\n              questions: formQuestions,\n              comment,\n              vendorId: props.vendorId\n            });\n            props.history.push(\"/reviews\");\n          }}\n        >\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   questions: state.questions\n// });\nexport default /*connect(mapStateToProps)*/ ReviewForm;\n","import React from \"react\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport { starQuestions } from \"../utils\";\n\nfunction makeStars(starsCount) {\n  const stars = [];\n  const partialStar = starsCount % 1;\n  for (let i = 0; i < Math.floor(starsCount); i++) {\n    stars.push(<StarRate style={{ color: \"green\" }} key={i} />);\n  }\n  partialStar &&\n    stars.push(<StarRate style={{ color: \"lightgreen\" }} key={starsCount} />);\n  return stars;\n}\nfunction Review({ review, history, ...rest }) {\n  return review ? (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        <div style={{ fontSize: \"24pt\" }}>{review && review.name}</div>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            history.push(`/review-form/${review.vendorId}/${review.name}`);\n          }}\n        >\n          Review this Vendor\n        </Button>\n      </div>\n      <Divider />\n      <div style={{ marginLeft: \"10px\" }}>\n        {review &&\n          starQuestions.map((question, index) => {\n            return (\n              <div style={{ marginTop: \"20px\" }} key={question}>\n                <span style={{ maxWidth: \"70%\", display: \"inline-block\" }}>\n                  {question}\n                </span>\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"7px\",\n                    marginLeft: \"15px\"\n                  }}\n                >\n                  {makeStars(review.questions[index])}\n                </span>\n              </div>\n            );\n          })}\n        {/* {review &&\n          booleanQuestions.map((question, index) => {\n            return (\n              <div style={{ marginTop: \"20px\" }} key={question.text}>\n                <span style={{ maxWidth: \"70%\", display: \"inline-block\" }}>\n                  {question}\n                </span>\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"0px\",\n                    marginLeft: \"15px\",\n                    fontWeight: \"bold\",\n                    fontSize: \"14pt\"\n                  }}\n                >\n                  {review.questions[index]}\n                </span>\n              </div>\n            );\n          })} */}\n        {/* {review &&\n          numberQuestions.map((question, index) => {\n            return (\n              <div style={{ marginTop: \"20px\" }} key={question.text}>\n                <span style={{ maxWidth: \"70%\", display: \"inline-block\" }}>\n                  {question}\n                </span>\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"0px\",\n                    marginLeft: \"15px\",\n                    fontWeight: \"bold\",\n                    fontSize: \"14pt\"\n                  }}\n                >\n                  {review.questions[index]}\n                </span>\n              </div>\n            );\n          })} */}\n        <div>\n          <Divider style={{ marginTop: \"20px\" }} />\n          {review.comments.map((comment, index) => (\n            <div style={{ marginTop: \"30px\" }} key={index}>\n              {/* <Typography component=\"h4\">{comment.authorName}</Typography> */}\n              <p style={{ marginLeft: \"10px\" }}>\"{comment}\"</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  ) : null;\n}\n\nconst mapStateToProps = state => ({\n  review: state.reviews.find(review => {\n    return review.vendorId === state.selectedReview;\n  })\n});\n\nexport default connect(mapStateToProps)(Review);\n","export function initializeForm(fields, customValidators = {}) {\n  const values = {};\n  const errors = {};\n  const validators = {};\n\n  fields.forEach(field => {\n    values[field] = \"\";\n    errors[field] = \"\";\n    if (customValidators[field]) {\n      validators[field] = customValidators[field];\n    } else {\n      validators[field] = value => (value === \"\" ? `${field} is required` : \"\");\n    }\n  });\n  return [{ values, errors, isFormValid: false }, validators];\n}\n\nfunction checkValidity(formState, requiredFieldsLength) {\n  const { values, errors } = formState;\n  const hasAllRequiredFields =\n    Object.keys(values).filter(value => values[value]).length ===\n    requiredFieldsLength;\n  const hasErrors = !!Object.keys(errors).filter(error => errors[error]).length;\n\n  return hasAllRequiredFields && !hasErrors;\n}\n\nexport function updateForm(e, formState, setFormState, validators) {\n  const field = e.target.name;\n  const value = e.target.value;\n  const validator = validators[field];\n  console.log(\"formstate\", formState);\n\n  const newFormState = {\n    ...formState,\n    values: {\n      ...formState.values,\n      [field]: value\n    },\n    errors: {\n      ...formState.errors,\n      [field]: validator(value, formState)\n    }\n  };\n\n  const isFormValid = checkValidity(\n    newFormState,\n    Object.keys(validators).length\n  );\n  setFormState({ ...newFormState, isFormValid });\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { initializeForm, updateForm } from \"../components/formState\";\nimport { dispatch } from \"../store\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      // backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 440\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  error: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SignIn({ history }) {\n  const classes = useStyles();\n  const call = useSelector(state => state.call);\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    const { location, goBack, push } = history;\n    const navFunc = location.isRedirect\n      ? () => goBack()\n      : () => push(\"/reviews\");\n    user.loggedIn && navFunc();\n  }, [user.loggedIn, history]);\n\n  const fields = [\"email\", \"password\"];\n  const [initialFormState, validators] = initializeForm(fields);\n  const [formState, setFormState] = useState(initialFormState);\n  const { values, errors, isFormValid } = formState;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        {call.error ? (\n          <Typography color=\"error\" align=\"center\" className={classes.error}>\n            {call.error}\n          </Typography>\n        ) : null}\n        <form\n          className={classes.form}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (isFormValid) {\n              dispatch.user.login(formState.values);\n              setFormState(initialFormState);\n            }\n          }}\n          noValidate\n        >\n          <TextField\n            value={values.email}\n            onChange={e => updateForm(e, formState, setFormState, validators)}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            error={!!errors.email}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            value={values.password}\n            error={!!errors.password}\n            onChange={e => updateForm(e, formState, setFormState, validators)}\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={!isFormValid}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link\n                component={RouterLink}\n                to=\"/forgot-password\"\n                variant=\"body2\"\n              >\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link component={RouterLink} to=\"/registration\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n\n      <p>Reviews of software recruiting, staffing and consulting agencies</p>\n    </Container>\n  );\n}\n\nexport default SignIn;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      // backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 500\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { initializeForm, updateForm } from \"../components/formState\";\nimport useStyles from \"./styles\";\nimport { dispatch } from \"../store\";\n\nfunction Registration({ history }) {\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    const { location, goBack, push } = history;\n    const navFunc = location.isRedirect\n      ? () => goBack()\n      : () => push(\"/reviews\");\n    user.loggedIn && navFunc();\n  }, [user.loggedIn, history]); // history included for eslint\n\n  const fields = [\"firstName\", \"lastName\", \"email\", \"password\"];\n  const [initialFormState, validators] = initializeForm(fields);\n  const [formState, setFormState] = useState(initialFormState);\n  const { values, errors, isFormValid } = formState;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (isFormValid) {\n              dispatch.user.register(formState.values);\n              setFormState(initialFormState);\n            }\n          }}\n          noValidate\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value={values.firstName}\n                onChange={e =>\n                  updateForm(e, formState, setFormState, validators)\n                }\n                error={!!errors.firstName}\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value={values.lastName}\n                onChange={e =>\n                  updateForm(e, formState, setFormState, validators)\n                }\n                error={!!errors.lastName}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={values.email}\n                onChange={e =>\n                  updateForm(e, formState, setFormState, validators)\n                }\n                error={!!errors.email}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={values.password}\n                onChange={e =>\n                  updateForm(e, formState, setFormState, validators)\n                }\n                error={!!errors.password}\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isFormValid}\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default Registration;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      // backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 500\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { initializeForm, updateForm } from \"../components/formState\";\nimport useStyles from \"./forgotPasswordStyles\";\nimport { dispatch } from \"../store\";\n\nfunction ForgotPassword() {\n  const classes = useStyles();\n\n  const fields = [\"email\"];\n  const [initialFormState, validators] = initializeForm(fields);\n  const [formState, setFormState] = useState(initialFormState);\n  const { values, errors, isFormValid } = formState;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Reset Password\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (isFormValid) {\n              dispatch.user.resetPassword(formState.values);\n              setFormState(initialFormState);\n            }\n          }}\n          noValidate\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                value={values.email}\n                onChange={e =>\n                  updateForm(e, formState, setFormState, validators)\n                }\n                error={!!errors.email}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isFormValid}\n            className={classes.submit}\n          >\n            Get new password\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                back to login\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default ForgotPassword;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      // backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 500\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { initializeForm, updateForm } from \"../components/formState\";\nimport useStyles from \"./profileStyles\";\nimport { dispatch } from \"../store\";\n\nfunction Profile() {\n  const classes = useStyles();\n\n  const fields = [\"oldPassword\", \"newPassword\", \"newPasswordConfirm\"];\n  const customValidators = {\n    newPasswordConfirm: (value, formState) =>\n      value !== formState.values.newPassword\n  };\n  const [initialFormState, validators] = initializeForm(\n    fields,\n    customValidators\n  );\n  const [formState, setFormState] = useState(initialFormState);\n  const { values, errors, isFormValid } = formState;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Change Password\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (isFormValid) {\n              dispatch.user.changePassword(formState.values);\n              setFormState(initialFormState);\n            }\n          }}\n          noValidate\n        >\n          <TextField\n            value={values.oldPassword}\n            onChange={e => updateForm(e, formState, setFormState, validators)}\n            error={!!errors.oldPassword}\n            margin=\"normal\"\n            variant=\"outlined\"\n            required\n            fullWidth\n            id=\"oldPassword\"\n            label=\"Password\"\n            name=\"oldPassword\"\n          />\n          <TextField\n            value={values.newPassword}\n            onChange={e => updateForm(e, formState, setFormState, validators)}\n            error={!!errors.newPassword}\n            variant=\"outlined\"\n            required\n            margin=\"normal\"\n            fullWidth\n            id=\"newPassword\"\n            label=\"New Password\"\n            name=\"newPassword\"\n          />\n          <TextField\n            value={values.newPasswordConfirm}\n            onChange={e => updateForm(e, formState, setFormState, validators)}\n            error={!!errors.newPasswordConfirm}\n            variant=\"outlined\"\n            required\n            margin=\"normal\"\n            fullWidth\n            id=\"newPasswordConfirm\"\n            label=\"Confirm New Password\"\n            name=\"newPasswordConfirm\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isFormValid}\n            className={classes.submit}\n          >\n            Get new password\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default Profile;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      // backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 500\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { initializeForm, updateForm } from \"../components/formState\";\nimport useStyles from \"./SuggestVendorStyles\";\nimport { dispatch } from \"../store\";\nimport Divider from \"@material-ui/core/Divider\";\n\nfunction SuggestVendor() {\n  const classes = useStyles();\n\n  const requiredFields = [\"name\", \"city\", \"state\"];\n  const [initialRequiredFormState, requiredValidators] = initializeForm(\n    requiredFields\n  );\n  const [requiredformState, setRequiredFormState] = useState(\n    initialRequiredFormState\n  );\n  const { values, errors, isFormValid } = requiredformState;\n\n  const optionalFields = [\"addressLine1\", \"addressLine2\", \"zipCode\", \"phone\"];\n  const [initialOptionalFormState, optionalValidators] = initializeForm(\n    optionalFields\n  );\n  const [optionalformState, setOptionalFormState] = useState(\n    initialOptionalFormState\n  );\n\n  const handleOptionalChange = e =>\n    updateForm(e, optionalformState, setOptionalFormState, optionalValidators);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Are we missing a vendor?\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (isFormValid) {\n              dispatch.vendor.suggestVendor({\n                ...requiredformState.values,\n                ...optionalformState.values\n              });\n              setRequiredFormState(initialRequiredFormState);\n              setOptionalFormState(initialOptionalFormState);\n            }\n          }}\n          noValidate\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                value={values.name}\n                onChange={e =>\n                  updateForm(\n                    e,\n                    requiredformState,\n                    setRequiredFormState,\n                    requiredValidators\n                  )\n                }\n                error={!!errors.name}\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Company Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value={values.city}\n                onChange={e =>\n                  updateForm(\n                    e,\n                    requiredformState,\n                    setRequiredFormState,\n                    requiredValidators\n                  )\n                }\n                error={!!errors.city}\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"city\"\n                label=\"City\"\n                type=\"city\"\n                id=\"city\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value={values.state}\n                onChange={e =>\n                  updateForm(\n                    e,\n                    requiredformState,\n                    setRequiredFormState,\n                    requiredValidators\n                  )\n                }\n                error={!!errors.state}\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"state\"\n                label=\"State\"\n                type=\"state\"\n                id=\"state\"\n              />\n            </Grid>\n            <Divider />\n            <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n              <TextField\n                value={optionalformState.values.addressLine1}\n                onChange={handleOptionalChange}\n                error={!!optionalformState.errors.addressLine1}\n                variant=\"outlined\"\n                fullWidth\n                id=\"addressLine1\"\n                label=\"Address Line 1\"\n                name=\"addressLine1\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={optionalformState.values.addressLine2}\n                onChange={handleOptionalChange}\n                error={!!optionalformState.errors.addressLine2}\n                variant=\"outlined\"\n                fullWidth\n                id=\"addressLine2\"\n                label=\"Address Line 2\"\n                name=\"addressLine2\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value={optionalformState.values.zipCode}\n                onChange={handleOptionalChange}\n                error={!!optionalformState.errors.zipCode}\n                variant=\"outlined\"\n                fullWidth\n                name=\"zipCode\"\n                label=\"Zip Code\"\n                type=\"zipCode\"\n                id=\"zipCode\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value={optionalformState.values.phone}\n                onChange={handleOptionalChange}\n                error={!!optionalformState.errors.phone}\n                variant=\"outlined\"\n                fullWidth\n                name=\"phone\"\n                label=\"Phone Number\"\n                type=\"phone\"\n                id=\"phone\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isFormValid}\n            className={classes.submit}\n            name=\"submitSuggestVendor\"\n          >\n            Suggest This Vendor\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default SuggestVendor;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.grey[200]\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport useStyles from \"./userReviewsStyles\";\nimport { useSelector } from \"react-redux\";\nimport makeStars from \"../components/MakeStars\";\nimport { dispatch } from \"../store\";\n\nfunction calcAverageStars(review) {\n  const sum = review.questions.reduce((total, question) => {\n    return (total += question);\n  }, 0);\n  return sum / review.questions.length;\n}\n\nfunction UserReviews({ history }) {\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              {user.firstName}'s Reviews\n            </Typography>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {user.reviews.map(review => (\n              <Grid item key={review.id} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardHeader\n                    title={review.name}\n                    subheader={makeStars(calcAverageStars(review))}\n                    titleTypographyProps={{ align: \"center\" }}\n                    subheaderTypographyProps={{ align: \"center\" }}\n                    className={classes.cardHeader}\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography>{review.comment} </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Grid container justify=\"flex-end\">\n                      <Button\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => {\n                          dispatch.user.deleteReview(review.id);\n                        }}\n                      >\n                        Delete\n                      </Button>\n                      <Button\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => {\n                          history.push(`/edit-review/${review.id}`);\n                          //navigate to edit review page\n                        }}\n                      >\n                        Edit\n                      </Button>\n                    </Grid>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default UserReviews;\n","import React, { useState } from \"react\";\n// import ReviewFormAutocomplete from \"./ReviewFormAutocomplete\";\nimport { useSelector } from \"react-redux\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { dispatch } from \"../store\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { starQuestions as questionsText } from \"../utils\";\n\nfunction makeStars(setQuestions, questionNumber, questions) {\n  const stars = [];\n  const question = questions[questionNumber];\n  for (let i = 0; i < 5; i++) {\n    stars.push(\n      <StarRate\n        onMouseEnter={() => {\n          if (question.hasStaticStars) return 0;\n          question.coloredStars = i + 1;\n          setQuestions(questions);\n        }}\n        onMouseLeave={() => {\n          if (question.hasStaticStars) return 0;\n          question.coloredStars = 0;\n          setQuestions(questions);\n        }}\n        onClick={() => {\n          if (question.hasStaticStars) {\n            question.coloredStars = i + 1;\n          }\n          question.hasStaticStars = true;\n          setQuestions(questions);\n        }}\n        style={{ color: i < question.coloredStars ? \"green\" : \"yellow\" }}\n        key={i}\n      />\n    );\n  }\n  return stars;\n}\n\nfunction EditReview({ match, history }) {\n  const review = useSelector(state => {\n    return state.user.reviews.find(review => {\n      return review.id == match.params.reviewId;\n    });\n  });\n  console.log(\"review\", review);\n  const { name, questions, comment, id, vendorId } = review;\n  const [formQuestions, setQuestions] = useState(\n    questions.map((question, index) => ({\n      text: questionsText[index],\n      coloredStars: question,\n      hasStaticStars: true\n    }))\n  );\n  const [formComment, setComment] = useState(comment);\n\n  return (\n    <div>\n      <div style={{ fontSize: \"20px\" }}>{name}</div>\n\n      <div>\n        <Divider />\n        <div style={{ marginLeft: \"10px\" }}>\n          {formQuestions.map((question, questionNumber) => {\n            return (\n              <div style={{ marginTop: \"20px\" }} key={question.text}>\n                <span style={{ maxWidth: \"70%\", display: \"inline-block\" }}>\n                  {question.text}\n                </span>\n                <span\n                  style={{\n                    position: \"relative\",\n                    top: \"5px\",\n                    marginLeft: \"15px\"\n                  }}\n                >\n                  {makeStars(setQuestions, questionNumber, [...formQuestions])}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n        <div style={{ marginLeft: \"10px\", marginTop: \"20px\", maxWidth: \"85%\" }}>\n          <div>Additional Comments:</div>\n          <TextField\n            id=\"outlined-multiline-flexible\"\n            fullWidth={true}\n            multiline\n            rowsMax=\"4\"\n            value={formComment}\n            onChange={e => setComment(e.target.value)}\n            className={null}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </div>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ marginTop: \"25px\", marginLeft: \"15px\" }}\n          onClick={() => {\n            console.log(\"questions\", {\n              questions: formQuestions,\n              comment: formComment,\n              id\n            });\n            dispatch.reviews.updateReview({\n              questions: formQuestions,\n              comment: formComment,\n              id,\n              vendorId\n            });\n            history.push(\"/your-reviews\");\n          }}\n        >\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default EditReview;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      // backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 440\n  },\n  title: {\n    fontSize: \"32pt\",\n    fontWeight: \"lighter\",\n    letterSpacing: \"1px\"\n  },\n  word: { margin: theme.spacing(0, 10, 5, 0) },\n  text: {\n    letterSpacing: \"2px\",\n    fontFamily: \"Letter Gothic\"\n    // margin: theme.spacing(0, 10, 5, 0)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  error: {\n    marginTop: theme.spacing(2)\n  }\n}));\nconst style = {\n  letterSpacing: \"1px\",\n  fontWeight: \"lighter\",\n  marginTop: \"30px\",\n  width: \"100%\",\n  textAlign: \"center\"\n  // marginLeft: \"50px\"\n};\nconst buttonStyle = {\n  letterSpacing: \"1px\",\n  marginTop: \"55px\",\n  width: \"15rem\",\n  fontWeight: \"bolder\"\n};\nfunction Home({ history }) {\n  const classes = useStyles();\n\n  const review = useSelector(state => state.reviews[0]);\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <div className={classes.paper}>\n        <Typography className={classes.title} component=\"p\" variant=\"h5\">\n          BitByte Review\n        </Typography>{\" \"}\n        <Grid container justify=\"flex-start\">\n          {/* <div style={{ marginTop: \"30px\" }}> */}\n          {/* <Grid container justify=\"flex-start\"> */}\n          {/* <Typography style={{ ...style, marginTop: \"60px\" }}>\n            Reviews of software recruiting, staffing and consulting agencies in\n            the Twin Cities.\n          </Typography> */}\n          {/* </Grid> */}\n          {/* <Grid container justify=\"flex-start\"> */}\n          {/* <Typography style={style}>\n            Software Developers leave reviews, which are aggregated and\n            presented to the community.\n          </Typography> */}\n          {/* <Typography style={style}>\n            A simple way for software developers to elevate those with\n            exceptional honesty, integrity and skill in serving our community.\n          </Typography> */}\n          <Typography style={style}>\n            Software professionals elevating the best recruiting, consulting,\n            and staffing agencies in the Twin Cities\n          </Typography>\n          <Grid container justify=\"center\">\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              style={buttonStyle}\n              onClick={() => {\n                history.push(\"/reviews\");\n              }}\n            >\n              Read Reviews\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ ...buttonStyle, marginLeft: \"2rem\" }}\n              onClick={() => {\n                history.push(`review-form/${review.vendorId}/${review.name}`);\n              }}\n            >\n              Write Reviews\n            </Button>\n          </Grid>\n          {/* </Grid> */}\n          {/* <Grid container justify=\"flex-start\">\n            <Typography className={classes.word}>Who</Typography>\n            <Typography className={classes.text}>\n              We are software developers that wanted a better way to share our\n              experiences and help excellent recruiters stand out.\n            </Typography>\n          </Grid> */}\n          {/* </div> */}\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport ReviewForm from \"../ReviewForm\";\nimport Review from \"../Review\";\nimport Login from \"../Login\";\nimport Registration from \"../Registration\";\nimport ForgotPassword from \"../ForgotPassword\";\nimport Profile from \"../Profile\";\nimport SuggestVendor from \"../SuggestVendor\";\nimport UserReviews from \"../UserReviews\";\nimport EditReview from \"../EditReview\";\nimport Home from \"../Home\";\n\nconst Routes = () => {\n  const questions = useSelector(state => state.questions);\n  const user = useSelector(state => state.user);\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/reviews\" exact component={Review} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/suggest-vendor\" component={SuggestVendor} />\n      <Route path=\"/your-reviews\" component={UserReviews} />\n      <Route path=\"/registration\" component={Registration} />\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\n      <Route path=\"/profile\" component={Profile} />\n      <Route path=\"/edit-review/:reviewId\" component={EditReview} />\n      <Route\n        path=\"/review-form/:vendorId/:vendorName\"\n        render={props => {\n          if (user.loggedIn) {\n            const { vendorId, vendorName } = props.match.params;\n            return (\n              <ReviewForm\n                vendorId={vendorId}\n                vendorName={vendorName}\n                history={props.history}\n              />\n            );\n          }\n          return (\n            <Redirect\n              push\n              to={{\n                pathname: \"/login\",\n                isRedirect: true\n              }}\n            />\n          );\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { indigo } from \"@material-ui/core/colors\";\n\nconst StyledButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(indigo[500]),\n    backgroundColor: indigo[500],\n    \"&:hover\": {\n      backgroundColor: indigo[700]\n    }\n  }\n}))(Button);\n\nfunction TopNavButton(props) {\n  return (\n    <StyledButton\n      color=\"primary\"\n      variant=\"text\"\n      onClick={() => props.history.push(props.to)}\n    >\n      {props.children}\n    </StyledButton>\n  );\n}\n\nexport default withRouter(TopNavButton);\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TopNavButton from \"../components/TopNavButton\";\nimport { Divider } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { dispatch } from \"../store\";\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 475\n  }\n}));\n\nfunction TopNav({ history }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const user = useSelector(state => state.user);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  function handleClick1(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          style={{ cursor: \"pointer\" }}\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n          onClick={() => history.push(\"/\")}\n        >\n          BitByte Review\n        </Typography>\n\n        <TopNavButton to=\"/reviews\">Reviews</TopNavButton>\n        {/* <TopNavButton to=\"/articles\">Articles</TopNavButton> */}\n        <TopNavButton to=\"/suggest-vendor\">Suggest a New Vendor</TopNavButton>\n        <IconButton color=\"inherit\" onClick={handleClick1}>\n          <AccountCircle />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {user.loggedIn ? (\n            [\n              <MenuItem key=\"1\" disabled>\n                Hello, {user.firstName}!\n              </MenuItem>,\n              <Divider key=\"2\" />,\n              <MenuItem\n                key=\"3\"\n                onClick={() => {\n                  handleClose();\n                  history.push(\"/your-reviews\");\n                }}\n              >\n                Your Reviews\n              </MenuItem>,\n              <MenuItem\n                key=\"4\"\n                onClick={() => {\n                  handleClose();\n                  history.push(\"/profile\");\n                }}\n              >\n                Your Profile\n              </MenuItem>,\n              <MenuItem\n                key=\"5\"\n                onClick={() => {\n                  dispatch.user.logout();\n                  handleClose();\n                }}\n              >\n                Logout\n              </MenuItem>\n            ]\n          ) : (\n            <MenuItem\n              onClick={() => {\n                history.push(\"/login\");\n                handleClose();\n              }}\n            >\n              Log In\n            </MenuItem>\n          )}\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withRouter(TopNav);\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { dispatch } from \"../store\";\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst handleClose = e => dispatch.app.setNotifcation({ notification: \"\" });\n\nfunction MainNotifcation(props) {\n  const classes = useStyles();\n  const notification = useSelector(state => state.app.notification);\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\"\n      }}\n      open={!!notification}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      ContentProps={{\n        \"aria-describedby\": \"message-id\"\n      }}\n      message={<span id=\"message-id\">{notification}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  );\n}\n\nexport default MainNotifcation;\n","export const reviews = [\n  {\n    name: \"Vendor1\",\n    addressLine1: \"22b baker street\",\n    addressLine2: \"PO box 12\",\n    city: \"Los Alamos\",\n    email: null,\n    state: \"New Mexico\",\n    zip: \"55410\",\n    phone: \"5056624067\",\n    vendorId: 2,\n    comments: [\"this vendor is the worst\"],\n    question1: \"1.00000000000000000000\",\n    question2: \"1.00000000000000000000\",\n    question3: \"1.00000000000000000000\",\n    question4: \"1.00000000000000000000\",\n    question5: \"1.00000000000000000000\",\n    question6: \"4.20000000000000000000\",\n    question7: \"1.00000000000000000000\",\n    question8: \"1.00000000000000000000\",\n    question9: \"1.00000000000000000000\",\n    question10: \"1.00000000000000000000\"\n  },\n  {\n    name: \"Vendor3\",\n    addressLine1: \"2b baker street\",\n    addressLine2: \"PO box 12\",\n    city: \"Los Alamos\",\n    email: null,\n    state: \"New Mexico\",\n    zip: \"55410\",\n    phone: \"5056624067\",\n    vendorId: 3,\n    comments: [\"aaaa\"],\n    question1: \"1.00000000000000000000\",\n    question2: \"1.00000000000000000000\",\n    question3: \"1.00000000000000000000\",\n    question4: \"1.00000000000000000000\",\n    question5: \"1.00000000000000000000\",\n    question6: \"1.00000000000000000000\",\n    question7: \"1.00000000000000000000\",\n    question8: \"1.00000000000000000000\",\n    question9: \"1.00000000000000000000\",\n    question10: \"1.00000000000000000000\"\n  }\n];\n\nexport const userAndReviews = {\n  id: 3,\n  email: \"a@a.com\",\n  firstName: \"Jason\",\n  lastName: \"Tenbrink\",\n  reviews: [\n    {\n      id: 2,\n      vendorId: 2,\n      userId: 3,\n      comment: \"this vendor is the best\",\n      question1: 2,\n      question2: 2,\n      question3: 2,\n      question4: 3,\n      question5: 3,\n      question6: 4,\n      question7: 4,\n      question8: 4,\n      question9: 4,\n      question10: 4,\n      created: null,\n      updated: null\n    },\n    {\n      id: 4,\n      vendorId: 2,\n      userId: 3,\n      comment: \"this vendor is the best\",\n      question1: 2,\n      question2: 2,\n      question3: 2,\n      question4: 3,\n      question5: 3,\n      question6: 4,\n      question7: 4,\n      question8: 4,\n      question9: 4,\n      question10: 4,\n      created: \"2019-09-12T04:46:45.375Z\",\n      updated: \"2019-09-12T04:46:45.375Z\"\n    },\n    {\n      id: 5,\n      vendorId: 2,\n      userId: 3,\n      comment: \"this vendor is the best\",\n      question1: 1,\n      question2: 1,\n      question3: 1,\n      question4: 1,\n      question5: 1,\n      question6: 1,\n      question7: 1,\n      question8: 1,\n      question9: 1,\n      question10: 1,\n      created: \"2019-09-12T04:47:10.627Z\",\n      updated: \"2019-09-12T04:47:10.627Z\"\n    },\n    {\n      id: 6,\n      vendorId: 2,\n      userId: 3,\n      comment: \"this vendor is the worst\",\n      question1: 1,\n      question2: 1,\n      question3: 1,\n      question4: 1,\n      question5: 1,\n      question6: 1,\n      question7: 1,\n      question8: 1,\n      question9: 1,\n      question10: 1,\n      created: \"2019-09-14T06:53:21.940Z\",\n      updated: \"2019-09-14T06:53:21.944Z\"\n    },\n    {\n      id: 7,\n      vendorId: 3,\n      userId: 3,\n      comment: \"aaaa\",\n      question1: 1,\n      question2: 1,\n      question3: 1,\n      question4: 1,\n      question5: 1,\n      question6: 1,\n      question7: 1,\n      question8: 1,\n      question9: 1,\n      question10: 1,\n      created: \"2019-09-14T06:55:15.330Z\",\n      updated: \"2019-09-14T06:55:15.330Z\"\n    },\n    {\n      id: 8,\n      vendorId: 3,\n      userId: 3,\n      comment: \"bbb\",\n      question1: 4,\n      question2: 4,\n      question3: 3,\n      question4: 3,\n      question5: 3,\n      question6: 2,\n      question7: 2,\n      question8: 4,\n      question9: 4,\n      question10: 5,\n      created: \"2019-09-14T06:55:50.172Z\",\n      updated: \"2019-09-14T06:55:50.172Z\"\n    },\n    {\n      id: 9,\n      vendorId: 3,\n      userId: 3,\n      comment: \"bbb\",\n      question1: 4,\n      question2: 4,\n      question3: 3,\n      question4: 3,\n      question5: 3,\n      question6: 2,\n      question7: 2,\n      question8: 4,\n      question9: 4,\n      question10: 5,\n      created: \"2019-09-15T06:31:56.704Z\",\n      updated: \"2019-09-15T06:31:56.704Z\"\n    },\n    {\n      id: 10,\n      vendorId: 3,\n      userId: 3,\n      comment: \"bbb\",\n      question1: 4,\n      question2: 4,\n      question3: 3,\n      question4: 3,\n      question5: 3,\n      question6: 2,\n      question7: 2,\n      question8: 4,\n      question9: 4,\n      question10: 5,\n      created: \"2019-09-16T03:14:06.054Z\",\n      updated: \"2019-09-16T03:14:06.054Z\"\n    }\n  ]\n};\n","import uuid from \"uuid/v4\";\nimport { reviews, userAndReviews } from \"./mockData\";\n\nexport default {\n  userReviews: userAndReviews,\n  getReviews() {\n    return new Promise(resolve => setTimeout(() => resolve(reviews), 100));\n  },\n  // getQuestions() {\n  //   return new Promise(resolve => setTimeout(() => resolve(questions), 100));\n  // },\n  postReview(payload) {\n    return new Promise(resolve =>\n      setTimeout(() => resolve({ statusCode: 200 }), 200)\n    );\n  },\n  login(payload) {\n    return new Promise(resolve =>\n      setTimeout(() => resolve(userAndReviews), 200)\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  },\n  register(payload) {\n    return new Promise(resolve =>\n      setTimeout(\n        () =>\n          resolve({\n            statusCode: 200,\n            username: \"bison\",\n            firstName: \"Jason\",\n            lastName: \"Tenbrink\",\n            userUuid: \"1111\",\n            email: \"jason@awesome.com\"\n          }),\n        200\n      )\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  },\n  resetPassword(payload) {\n    return new Promise(resolve =>\n      setTimeout(\n        () =>\n          resolve({\n            statusCode: 200\n          }),\n        200\n      )\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  },\n  suggestVendor(payload) {\n    return new Promise(resolve =>\n      setTimeout(\n        () =>\n          resolve({\n            statusCode: 200\n          }),\n        200\n      )\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  },\n  provideFeedback(payload) {\n    return new Promise(resolve =>\n      setTimeout(\n        () =>\n          resolve({\n            statusCode: 200\n          }),\n        200\n      )\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  },\n  updateReview(payload) {\n    return new Promise(resolve =>\n      setTimeout(\n        () =>\n          resolve({\n            statusCode: 200\n          }),\n        200\n      )\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  },\n  deleteReview(payload) {\n    return new Promise(resolve =>\n      setTimeout(\n        () =>\n          resolve({\n            statusCode: 200\n          }),\n        200\n      )\n    );\n    // return new Promise((resolve, reject) =>\n    //   setTimeout(() => reject(\"invalid login credentials\"), 200)\n    // );\n  }\n};\n\n// const questions = [\n//   {\n//     text: \"Did the vendor deal with you fairly?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text:\n//       \"Are the vendor's margins competative (Do they take too much off of the top or not)?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text: \"Did the vendor communicate with you in a timely manner?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text: \"was the vendor knowledgable of the technology industry?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text: \"was the vendor knowledgable of the local job market?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text: \"Did the vendor try and do right by you?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text: \"Was the vendor receptive to your feedback?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text:\n//       \"Did the vendor put in the effort to get to know you? (Didn't show you front end jobs if you didn't want to do front end)\",\n//     uuid: uuid()\n//   },\n//   { text: \"Does the vendor treat minorities well?\", uuid: uuid() },\n//   {\n//     text: \"Did the vendor advocate to get you the pay rate you wanted?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text:\n//       \"How many interviews did the vendor get you per week?(this shouldn't be a stars q.  It should display a number)\",\n//     uuid: uuid()\n//   },\n//   {\n//     text:\n//       \"how many weeks  between the time the time you started working with the vendor and landing a job?\",\n//     uuid: uuid()\n//   },\n//   {\n//     text:\n//       \"did you end up getting placed through the vendor? (should be a percentage instead of star)\",\n//     uuid: uuid()\n//   }\n// ];\n\n// const reviews = [\n//   {\n//     uuid: uuid(),\n//     // uuid: 1,\n//     name: \"Vendor 1\",\n//     vendorUuid: uuid(),\n//     questions: [\n//       {\n//         text: \"Did the vendor deal with you fairly?\",\n//         stars: 3.2\n//       },\n//       {\n//         text:\n//           \"Are the vendor's margins competative (Do they take too much off of the top or not)?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"Did the vendor communicate with you in a timely manner?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the technology industry?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the local job market?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"Did the vendor try and do right by you?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"Was the vendor receptive to your feedback?\",\n//         stars: 3.2\n//       },\n//       {\n//         text:\n//           \"Did the vendor put in the effort to get to know you? (Didn't show you front end jobs if you didn't want to do front end)\",\n//         stars: 4\n//       },\n//       { text: \"Does the vendor treat minorities well?\", stars: 4 },\n//       {\n//         text: \"Did the vendor advocate to get you the pay rate you wanted?\",\n//         stars: 4\n//       },\n//       {\n//         text:\n//           \"How many interviews did the vendor get you per week?(this shouldn't be a stars question.  It should display a number)\",\n//         stars: 2\n//       },\n//       {\n//         text:\n//           \"how many weeks  between the time the time you started working with the vendor and landing a job?\",\n//         stars: 3\n//       },\n//       {\n//         text:\n//           \"did you end up getting placed through the vendor? (should be a percentage instead of stars)\",\n//         stars: 2\n//       }\n//     ],\n//     comments: [\n//       { authorName: \"user1\", authorUuid: \"123\", text: \"this is a comment\" },\n//       { authorName: \"user2\", authorUuid: \"222\", text: \"this is a comment2\" }\n//     ]\n//   },\n//   {\n//     uuid: uuid(),\n//     name: \"Vendor 2\",\n//     vendorUuid: uuid(),\n//     questions: [\n//       {\n//         text: \"Did the vendor deal with you fairly?\",\n//         stars: 1.2\n//       },\n//       {\n//         text:\n//           \"Are the vendor's margins competative (Do they take too much off of the top or not)?\",\n//         stars: 1.2\n//       },\n//       {\n//         text: \"Did the vendor communicate with you in a timely manner?\",\n//         stars: 1.2\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the technology industry?\",\n//         stars: 1\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the local job market?\",\n//         stars: 1\n//       },\n//       {\n//         text: \"Did the vendor try and do right by you?\",\n//         stars: 2\n//       },\n//       {\n//         text: \"Was the vendor receptive to your feedback?\",\n//         stars: 2\n//       },\n//       {\n//         text:\n//           \"Did the vendor put in the effort to get to know you? (Didn't show you front end jobs if you didn't want to do front end)\",\n//         stars: 1\n//       },\n//       { text: \"Does the vendor treat minorities well?\", stars: 4 },\n//       {\n//         text: \"Did the vendor advocate to get you the pay rate you wanted?\",\n//         stars: 4\n//       },\n//       {\n//         text:\n//           \"How many interviews did the vendor get you per week?(this shouldn't be a stars question.  It should display a number)\",\n//         stars: 2\n//       },\n//       {\n//         text:\n//           \"how many weeks  between the time the time you started working with the vendor and landing a job?\",\n//         stars: 3\n//       },\n//       {\n//         text:\n//           \"did you end up getting placed through the vendor? (should be a percentage instead of stars)\",\n//         stars: 2\n//       }\n//     ],\n//     comments: [\n//       { authorName: \"user3\", authorUuid: \"333\", text: \"this is a comment3\" },\n//       { authorName: \"user4\", authorUuid: \"444\", text: \"this is a comment4\" }\n//     ]\n//   }\n// ];\n\n// const userReviews = [\n//   {\n//     uuid: uuid(),\n//     // uuid: 1,\n//     name: \"Vendor 3\",\n//     vendorUuid: uuid(),\n//     questions: [\n//       {\n//         text: \"Did the vendor deal with you fairly?\",\n//         stars: 3.2\n//       },\n//       {\n//         text:\n//           \"Are the vendor's margins competative (Do they take too much off of the top or not)?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"Did the vendor communicate with you in a timely manner?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the technology industry?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the local job market?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"Did the vendor try and do right by you?\",\n//         stars: 3.2\n//       },\n//       {\n//         text: \"Was the vendor receptive to your feedback?\",\n//         stars: 3.2\n//       },\n//       {\n//         text:\n//           \"Did the vendor put in the effort to get to know you? (Didn't show you front end jobs if you didn't want to do front end)\",\n//         stars: 4\n//       },\n//       { text: \"Does the vendor treat minorities well?\", stars: 4 },\n//       {\n//         text: \"Did the vendor advocate to get you the pay rate you wanted?\",\n//         stars: 4\n//       },\n//       {\n//         text:\n//           \"How many interviews did the vendor get you per week?(this shouldn't be a stars question.  It should display a number)\",\n//         stars: 2\n//       },\n//       {\n//         text:\n//           \"how many weeks  between the time the time you started working with the vendor and landing a job?\",\n//         stars: 3\n//       },\n//       {\n//         text:\n//           \"did you end up getting placed through the vendor? (should be a percentage instead of stars)\",\n//         stars: 2\n//       }\n//     ],\n//     comment: \"this vendor kicked ass!\"\n//   },\n//   {\n//     uuid: uuid(),\n//     name: \"Vendor 4\",\n//     vendorUuid: uuid(),\n//     questions: [\n//       {\n//         text: \"Did the vendor deal with you fairly?\",\n//         stars: 1.2\n//       },\n//       {\n//         text:\n//           \"Are the vendor's margins competative (Do they take too much off of the top or not)?\",\n//         stars: 1.2\n//       },\n//       {\n//         text: \"Did the vendor communicate with you in a timely manner?\",\n//         stars: 1.2\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the technology industry?\",\n//         stars: 1\n//       },\n//       {\n//         text: \"was the vendor knowledgable of the local job market?\",\n//         stars: 1\n//       },\n//       {\n//         text: \"Did the vendor try and do right by you?\",\n//         stars: 2\n//       },\n//       {\n//         text: \"Was the vendor receptive to your feedback?\",\n//         stars: 2\n//       },\n//       {\n//         text:\n//           \"Did the vendor put in the effort to get to know you? (Didn't show you front end jobs if you didn't want to do front end)\",\n//         stars: 1\n//       },\n//       { text: \"Does the vendor treat minorities well?\", stars: 4 },\n//       {\n//         text: \"Did the vendor advocate to get you the pay rate you wanted?\",\n//         stars: 4\n//       },\n//       {\n//         text:\n//           \"How many interviews did the vendor get you per week?(this shouldn't be a stars question.  It should display a number)\",\n//         stars: 2\n//       },\n//       {\n//         text:\n//           \"how many weeks  between the time the time you started working with the vendor and landing a job?\",\n//         stars: 3\n//       },\n//       {\n//         text:\n//           \"did you end up getting placed through the vendor? (should be a percentage instead of stars)\",\n//         stars: 2\n//       }\n//     ],\n//     comment: \"a comment about this vendor\"\n//   }\n// ];\n","import React, { useEffect, Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { dispatch } from \"./store\";\nimport VendorsList from \"./VendorsList\";\nimport Routes from \"./Routes\";\nimport TopNav from \"./TopNav\";\nimport MainNotification from \"./MainNotification/\";\n\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport mockApis from \"./apis/mockApis\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 475\n  }\n}));\n\nfunction MainContent(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [comment, setComment] = React.useState(\"\");\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const user = useSelector(state => state.user);\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper);\n\n  useEffect(() => {\n    dispatch.reviews.getReviewsAndSetSelected();\n    // dispatch.questions.getQuestions();\n  }, []);\n\n  return (\n    <Fragment>\n      <TopNav />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <VendorsList />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n              <MainNotification />\n              <Paper className={fixedHeightPaper}>\n                <Routes />\n                <Grid style={{ marginTop: \"20px\" }} container justify=\"center\">\n                  <Button color=\"primary\" onClick={() => setModalOpen(true)}>\n                    Leave feedback about this page\n                  </Button>\n                </Grid>\n                <Dialog\n                  disableBackdropClick\n                  keepMounted\n                  fullWidth\n                  maxWidth=\"sm\"\n                  aria-labelledby=\"confirmation-dialog-title\"\n                  open={modalOpen}\n                >\n                  <DialogTitle id=\"confirmation-dialog-title\">\n                    Tell us ow could this page be better\n                  </DialogTitle>\n                  <DialogContent>\n                    <TextField\n                      id=\"outlined-multiline-flexible\"\n                      fullWidth={true}\n                      multiline\n                      rows=\"4\"\n                      value={comment}\n                      onChange={e => setComment(e.target.value)}\n                      className={null}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={() => setModalOpen(false)} color=\"primary\">\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={async () => {\n                        try {\n                          await mockApis.provideFeedback({\n                            comment,\n                            user,\n                            page: window.location.href\n                          });\n                          setModalOpen(false);\n                          setComment(\"\");\n                        } catch (e) {\n                          dispatch.call.setCall({\n                            isFetching: false,\n                            error: e\n                          });\n                        }\n                      }}\n                      color=\"primary\"\n                    >\n                      Submit\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </Fragment>\n  );\n}\n\nexport default withRouter(MainContent);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport MainContent from \"./MainContent\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  }\n}));\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Provider store={store}>\n        <Router>\n          <MainContent />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}